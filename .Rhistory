Teams = MergeTeams("LAA", "ANA")  #remove and combine each of the 5 teams that are redundant
Teams <- na.omit(Teams) #function left "missing data" for removed teams, remove that
ggplot(data=Teams,aes(x=reorder(teamID,avgSal),y=avgSal ))+geom_bar(stat='identity',position='stack', width=.9) + theme(axis.text.x=element_text(angle=60,hjust=1))
View(Teams)
Teams <-
Stats_salary %>%
group_by(teamID,yearID,lgID) %>% #make each team and year a case by combining player data
summarise(payroll = sum(salary)) %>% #find the total payroll for each team in a given season
group_by(teamID,lgID) %>%  #group each team across years so I can find the average payrolls since 1985
summarise(avgSal = mean(payroll))
#create a function to combine teams that have changed their cities over the years (ex: Montreal to Wash)
MergeTeams <- function(KeptTeam,RemovedTeam) {
Teams[which(grepl(KeptTeam,Teams)),2]<-
Teams[which(grepl(KeptTeam,Teams)),2]+
Teams[which(grepl(RemovedTeam,Teams)),2]
Teams <- Teams[ which(Teams !=RemovedTeam),]
return(Teams)
}
Teams = MergeTeams("MIA","FLO")
View(Teams)
barGraphHelper(Teams)
View(Teams)
Teams <-
Stats_salary %>%
group_by(teamID,yearID) %>% #make each team and year a case by combining player data
summarise(payroll = sum(salary)) %>% #find the total payroll for each team in a given season
group_by(teamID) %>%  #group each team across years so I can find the average payrolls since 1985
summarise(avgSal = mean(payroll))
#create a function to combine teams that have changed their cities over the years (ex: Montreal to Wash)
MergeTeams <- function(KeptTeam,RemovedTeam) {
Teams[which(grepl(KeptTeam,Teams)),2]<-
Teams[which(grepl(KeptTeam,Teams)),2]+
Teams[which(grepl(RemovedTeam,Teams)),2]
Teams <- Teams[ which(Teams !=RemovedTeam),]
return(Teams)
}
Teams = MergeTeams("MIA","FLO")
Teams = MergeTeams("LAA", "CAL")
Teams = MergeTeams("WAS", "MON")
Teams = MergeTeams("MIL","ML4")
Teams = MergeTeams("LAA", "ANA")  #remove and combine each of the 5 teams that are redundant
Teams <- na.omit(Teams) #function left "missing data" for removed teams, remove that
ggplot(data=Teams,aes(x=reorder(teamID,avgSal),y=avgSal ))+geom_bar(stat='identity',position='stack', width=.9) + theme(axis.text.x=element_text(angle=60,hjust=1))
View(Stadiums)
View(GPScord)
View(houseModel)
View(Houses)
View(MapData)
View(MlbMap)
View(mod1)
View(Salaries)
Teams <-
Stats_salary %>%
group_by(teamID,yearID) %>% #make each team and year a case by combining player data
summarise(payroll = sum(salary)) %>% #find the total payroll for each team in a given season
group_by(teamID) %>%  #group each team across years so I can find the average payrolls since 1985
summarise(avgSal = mean(payroll))
#create a function to combine teams that have changed their cities over the years (ex: Montreal to Wash)
MergeTeams <- function(KeptTeam,RemovedTeam) {
Teams[which(grepl(KeptTeam,Teams)),2]<-
Teams[which(grepl(KeptTeam,Teams)),2]+
Teams[which(grepl(RemovedTeam,Teams)),2]
Teams <- Teams[ which(Teams !=RemovedTeam),]
return(Teams)
}
Teams = MergeTeams("MIA","FLO")
Teams = MergeTeams("LAA", "CAL")
Teams = MergeTeams("WAS", "MON")
Teams = MergeTeams("MIL","ML4")
Teams = MergeTeams("LAA", "ANA")  #remove and combine each of the 5 teams that are redundant
Teams <- na.omit(Teams) #function left "missing data" for removed teams, remove that
League <- c("AL","NL","NL","AL","AL","NL","AL","NL","AL","NL","AL","NL","AL","AL","NL","NL","AL","NL","NL","AL","AL","NL","NL","NL","NL","NL","AL","AL","AL","AL")
Teams <- cbind(Teams,League)
ggplot(data=Teams,aes(x=reorder(teamID,avgSal),y=avgSal ))+geom_bar(stat='identity',position='stack', width=.9) + theme(axis.text.x=element_text(angle=60,hjust=1))
View(Teams)
Teams <-
Stats_salary %>%
group_by(teamID,yearID) %>% #make each team and year a case by combining player data
summarise(payroll = sum(salary)) %>% #find the total payroll for each team in a given season
group_by(teamID) %>%  #group each team across years so I can find the average payrolls since 1985
summarise(avgSal = mean(payroll))
#create a function to combine teams that have changed their cities over the years (ex: Montreal to Wash)
MergeTeams <- function(KeptTeam,RemovedTeam) {
Teams[which(grepl(KeptTeam,Teams)),2]<-
Teams[which(grepl(KeptTeam,Teams)),2]+
Teams[which(grepl(RemovedTeam,Teams)),2]
Teams <- Teams[ which(Teams !=RemovedTeam),]
return(Teams)
}
Teams = MergeTeams("MIA","FLO")
Teams = MergeTeams("LAA", "CAL")
Teams = MergeTeams("WAS", "MON")
Teams = MergeTeams("MIL","ML4")
Teams = MergeTeams("LAA", "ANA")  #remove and combine each of the 5 teams that are redundant
Teams <- na.omit(Teams) #function left "missing data" for removed teams, remove that
League <- c("NL","NL","AL","AL","AL","NL","NL","AL","NL","AL","AL","AL","AL","NL","NL","NL","AL","AL","NL","AL","NL","NL","NL","AL","NL","NL","AL","AL","AL","NL")
Teams <- cbind(Teams,League)
ggplot(data=Teams,aes(x=reorder(teamID,avgSal),y=avgSal ))+geom_bar(stat='identity',position='stack', width=.9) + theme(axis.text.x=element_text(angle=60,hjust=1))
View(Teams)
barGraphHelper(Teams)
View(MapData)
Teams <-
Stats_salary %>%
group_by(teamID,yearID) %>% #make each team and year a case by combining player data
summarise(payroll = sum(salary)) %>% #find the total payroll for each team in a given season
group_by(teamID) %>%  #group each team across years so I can find the average payrolls since 1985
summarise(avgSal = mean(payroll))
#create a function to combine teams that have changed their cities over the years (ex: Montreal to Wash)
MergeTeams <- function(KeptTeam,RemovedTeam) {
Teams[which(grepl(KeptTeam,Teams)),2]<-
Teams[which(grepl(KeptTeam,Teams)),2]+
Teams[which(grepl(RemovedTeam,Teams)),2]
Teams <- Teams[ which(Teams !=RemovedTeam),]
return(Teams)
}
Teams = MergeTeams("MIA","FLO")
Teams = MergeTeams("LAA", "CAL")
Teams = MergeTeams("WAS", "MON")
Teams = MergeTeams("MIL","ML4")
Teams = MergeTeams("LAA", "ANA")  #remove and combine each of the 5 teams that are redundant
Teams <- na.omit(Teams) #function left "missing data" for removed teams, remove that
League <- c("NL","NL","AL","AL","AL","NL","NL","AL","NL","AL","AL","AL","AL","NL","NL","NL","AL","AL","NL","AL","NL","NL","NL","AL","NL","NL","AL","AL","AL","NL")
Teams <- cbind(Teams,League)
ggplot(data=Teams,aes(x=reorder(teamID,avgSal),y=avgSal ,fill=League))+geom_bar(stat='identity',position='stack', width=.9) + theme(axis.text.x=element_text(angle=60,hjust=1))
library(rjson)
GPScord <- file("mlb_stadium.json") #read in a json file with GPS coordindates of all MLB stadiums
GPScord <- fromJSON(file=GPScord)
GPScord <- data.frame(matrix(unlist(GPScord),nrow=30,byrow=T)) #go from json list to a data frame
Abrev <- c("LAA","ARI","ATL","BAL","BOS","CHN","CHA","CIN","CLE","COL","DET","MIA","HOU","KCA","LAN","MIL","MIN","WAS","NYN","NYA","OAK","PHI","PIT","SLN","SDN","SFN","SEA","TBA","TEX","TOR")
Stadiums <- cbind(GPScord,Abrev)  #add the abbreviations to the Stadiums table to prepare a join
MapData <- Teams %>%
left_join(Stadiums, by =c("teamID"="Abrev"))
#match team and city name column with their respective abbreviations
colnames(MapData) <- c("Abrev","avgSal","Team","Address","lat","lng")
MapData <-
MapData %>%
mutate(lat=as.character(lat),lng=as.character(lng),avgSal = as.character(avgSal)) %>%
mutate(lat=as.numeric(lat),lng=as.numeric(lng),avgSal = as.numeric(avgSal)) #convert lat and lingitude to numeric data
library(rjson)
GPScord <- file("mlb_stadium.json") #read in a json file with GPS coordindates of all MLB stadiums
GPScord <- fromJSON(file=GPScord)
GPScord <- data.frame(matrix(unlist(GPScord),nrow=30,byrow=T)) #go from json list to a data frame
Abrev <- c("LAA","ARI","ATL","BAL","BOS","CHN","CHA","CIN","CLE","COL","DET","MIA","HOU","KCA","LAN","MIL","MIN","WAS","NYN","NYA","OAK","PHI","PIT","SLN","SDN","SFN","SEA","TBA","TEX","TOR")
Stadiums <- cbind(GPScord,Abrev)  #add the abbreviations to the Stadiums table to prepare a join
MapData <- Teams %>%
left_join(Stadiums, by =c("teamID"="Abrev"))
#match team and city name column with their respective abbreviations
colnames(MapData) <- c("Abrev","avgSal","Team","Address","lat","lng")
#MapData <-
MapData %>%
mutate(lat=as.character(lat),lng=as.character(lng),avgSal = as.character(avgSal)) %>%
mutate(lat=as.numeric(lat),lng=as.numeric(lng),avgSal = as.numeric(avgSal)) #convert lat and lingitude to numeric data
library(rjson)
GPScord <- file("mlb_stadium.json") #read in a json file with GPS coordindates of all MLB stadiums
GPScord <- fromJSON(file=GPScord)
GPScord <- data.frame(matrix(unlist(GPScord),nrow=30,byrow=T)) #go from json list to a data frame
Abrev <- c("LAA","ARI","ATL","BAL","BOS","CHN","CHA","CIN","CLE","COL","DET","MIA","HOU","KCA","LAN","MIL","MIN","WAS","NYN","NYA","OAK","PHI","PIT","SLN","SDN","SFN","SEA","TBA","TEX","TOR")
Stadiums <- cbind(GPScord,Abrev)  #add the abbreviations to the Stadiums table to prepare a join
MapData <- Teams %>%
left_join(Stadiums, by =c("teamID"="Abrev"))
#match team and city name column with their respective abbreviations
colnames(MapData) <- c("Abrev","avgSal","Team","Address","lat","lng")
#MapData <-
#  MapData %>%
# mutate(lat=as.character(lat),lng=as.character(lng),avgSal = as.character(avgSal)) %>%
#mutate(lat=as.numeric(lat),lng=as.numeric(lng),avgSal = as.numeric(avgSal)) #convert lat and lingitude to numeric data
View(MapData)
library(rjson)
GPScord <- file("mlb_stadium.json") #read in a json file with GPS coordindates of all MLB stadiums
GPScord <- fromJSON(file=GPScord)
GPScord <- data.frame(matrix(unlist(GPScord),nrow=30,byrow=T)) #go from json list to a data frame
Abrev <- c("LAA","ARI","ATL","BAL","BOS","CHN","CHA","CIN","CLE","COL","DET","MIA","HOU","KCA","LAN","MIL","MIN","WAS","NYN","NYA","OAK","PHI","PIT","SLN","SDN","SFN","SEA","TBA","TEX","TOR")
Stadiums <- cbind(GPScord,Abrev)  #add the abbreviations to the Stadiums table to prepare a join
MapData <- Teams %>%
left_join(Stadiums, by =c("teamID"="Abrev"))
#match team and city name column with their respective abbreviations
colnames(MapData) <- c("Abrev","avgSal","League","Team","Address","lat","lng")
MapData <-
MapData %>%
mutate(lat=as.character(lat),lng=as.character(lng),avgSal = as.character(avgSal)) %>%
mutate(lat=as.numeric(lat),lng=as.numeric(lng),avgSal = as.numeric(avgSal)) #convert lat and lingitude to numeric data
View(MapData)
library(leaflet)
library(maps)
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius= 2,color="red")
MlbMap
library(knitr)
Salaries <-
read.csv("Salaries.csv")
kable(head(Salaries))
library(leaflet)
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius= MapData,color="red")
MlbMap
library(leaflet)
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius= avgSal,color="red")
library(leaflet)
MlbMap <-
MapData %>%
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius= avgSal,color="red")
library(leaflet)
MlbMap <-
MapData %>%
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius= "avgSal",color="red")
MlbMap
library(leaflet)
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=2,color="red")
MlbMap
library(leaflet)
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=2,color="red",label = Abrev)
MlbMap
library(leaflet)
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=MapData$avgSalary,color="red",label = Abrev)
MlbMap
library(leaflet)
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=2,color="red",label = MapData$Abrev)
MlbMap
library(leaflet)
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=2,color="red",label = MapData$Abrev)
MlbMap
library(leaflet)
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=2,color="red",label = MapData$Abrev,color=MapData$League)
library(leaflet)
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=2,color="red",label = MapData$Abrev,color=pal(MapData$League))
library(leaflet)
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=2,color="red",label = MapData$Abrev,color=League)
library(leaflet)
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=2,label = MapData$Abrev,color=League)
MlbMap
library(leaflet)
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=2,label = MapData$Abrev,color=pal(League))
library(leaflet)
pal <- colorFactor(c("navy", "red"), domain = c("NL", "AL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=2,label = MapData$Abrev,color=pal(type))
library(leaflet)
pal <- colorFactor(c("navy", "red"), domain = c("NL", "AL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=2,label = MapData$Abrev,color=pal(League))
MlbMap
library(leaflet)
pal <- colorFactor(c("navy", "red"), domain = c("NL", "AL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=2,label = MapData$Abrev,color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("navy", "red"), domain = c("AL", "NL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=2,label = MapData$Abrev,color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=2,label = MapData$Abrev,color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=MlbData$avgSal*2,label = MapData$Abrev,color=pal(MapData$League))
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=MapData$avgSal*2,label = MapData$Abrev,color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal*2,label = MapData$Abrev,color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal*100,label = MapData$Abrev,color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal*10000,label = MapData$Abrev,color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal,label = MapData$Abrev,color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal/100,label = MapData$Abrev,color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal/100000,label = MapData$Abrev,color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal/10000000,label = MapData$Abrev,color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal/1000000,label = MapData$Abrev,color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal/5000000,label = MapData$Abrev,color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal/7000000,label = MapData$Abrev,color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal/9000000,label = MapData$Abrev,color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal/6000000,label = MapData$Abrev,color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal/6000000,label = C(MapData$Abrev,MapData$avgSal),color=pal(MapData$League))
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal/6000000,label = (MapData$Abrev MapData$avgSal),color=pal(MapData$League))
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal/6000000,label = MapData$Abrev, label = MapData$avgSal,color=pal(MapData$League))
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal/6000000,label = MapData$Abrev,avgSal, color=pal(MapData$League))
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal/6000000,label = MapData$Abrev, color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL"))
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal/6000000,label = MapData$Abrev, color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL")) #assign colors for my leaflet by league
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal/6000000,label = c(MapData$avgSal,MapData$Abrev), color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL")) #assign colors for my leaflet by league
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal/6000000,label = c(MapData$avgSal,MapData$Abrev), color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL")) #assign colors for my leaflet by league
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal/6000000,label=c(MapData$avgSal,MapData$Abrev), color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL")) #assign colors for my leaflet by league
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal/6000000,label=c(MapData$avgSal,MapData$Abrev), color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL")) #assign colors for my leaflet by league
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal/6000000,label=c(MapData$avgSal,MapData$Abrev), color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL")) #assign colors for my leaflet by league
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal/6000000,label=c(MapData$avgSal,MapData$Abrev), color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL")) #assign colors for my leaflet by league
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal/6000000,label=c(MapData$avgSal,MapData$Abrev), color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL")) #assign colors for my leaflet by league
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal/6000000,label=~c(MapData$avgSal,MapData$Abrev), color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL")) #assign colors for my leaflet by league
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal/6000000,label=c(MapData$Abrev,MapData$avgSal), color=pal(MapData$League))
MlbMap
library(leaflet)
pal <- colorFactor(c("red", "navy"), domain = c("AL", "NL")) #assign colors for my leaflet by league
MlbMap <-
leaflet(MapData) %>%
addTiles() %>%
addCircleMarkers(radius=~MapData$avgSal/6000000,label=MapData$Abrev, color=pal(MapData$League))
MlbMap
